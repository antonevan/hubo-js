// Generated by CoffeeScript 1.6.3
var c, callback, populateTracks, progress, wrapProp;

wrapProp = function(src, prop, dest, name) {
  Object.defineProperty(dest, name, {
    get: function() {
      return src[prop];
    },
    set: function(val) {
      return src[prop] = val;
    },
    enumerable: true
  });
};

populateTracks = function() {
  var d, newKey, p, t, _i, _j, _len, _len1, _ref, _ref1;
  t = Timeline.getGlobalInstance();
  console.log('t.tracks[0].propertyTracks.length = ' + t.tracks[0].propertyTracks.length);
  _ref = t.tracks;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    d = _ref[_i];
    _ref1 = d.propertyTracks;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      p = _ref1[_j];
      newKey = {
        time: 0,
        value: hubo.motors[p.propertyName].default_value,
        easing: Timeline.Easing.Linear.EaseNone,
        track: p
      };
      p.keys.push(newKey);
    }
  }
};

c = new WebGLRobots.DefaultCanvas('#hubo_container', 480, 300);

window.hubo = new Hubo('hubo2', callback = function() {
  var head, larm, lleg, rarm, rleg;
  c.add(hubo);
  $('#load').hide();
  head = {};
  wrapProp(hubo.motors.NKY, 'value', head, 'NKY');
  wrapProp(hubo.motors.NK1, 'value', head, 'NK1');
  wrapProp(hubo.motors.NK2, 'value', head, 'NK2');
  larm = {};
  wrapProp(hubo.motors.LSP, 'value', larm, 'LSP');
  wrapProp(hubo.motors.LSR, 'value', larm, 'LSR');
  wrapProp(hubo.motors.LSY, 'value', larm, 'LSY');
  wrapProp(hubo.motors.LEP, 'value', larm, 'LEP');
  wrapProp(hubo.motors.LWP, 'value', larm, 'LWP');
  wrapProp(hubo.motors.LWY, 'value', larm, 'LWY');
  rarm = {};
  wrapProp(hubo.motors.RSP, 'value', rarm, 'RSP');
  wrapProp(hubo.motors.RSR, 'value', rarm, 'RSR');
  wrapProp(hubo.motors.RSY, 'value', rarm, 'RSY');
  wrapProp(hubo.motors.REP, 'value', rarm, 'REP');
  wrapProp(hubo.motors.RWP, 'value', rarm, 'RWP');
  wrapProp(hubo.motors.RWY, 'value', rarm, 'RWY');
  lleg = {};
  wrapProp(hubo.motors.LHY, 'value', lleg, 'LHY');
  wrapProp(hubo.motors.LHR, 'value', lleg, 'LHR');
  wrapProp(hubo.motors.LHP, 'value', lleg, 'LHP');
  wrapProp(hubo.motors.LKP, 'value', lleg, 'LKP');
  wrapProp(hubo.motors.LAR, 'value', lleg, 'LAR');
  wrapProp(hubo.motors.LAP, 'value', lleg, 'LAP');
  rleg = {};
  wrapProp(hubo.motors.RHY, 'value', rleg, 'RHY');
  wrapProp(hubo.motors.RHR, 'value', rleg, 'RHR');
  wrapProp(hubo.motors.RHP, 'value', rleg, 'RHP');
  wrapProp(hubo.motors.RKP, 'value', rleg, 'RKP');
  wrapProp(hubo.motors.RAR, 'value', rleg, 'RAR');
  wrapProp(hubo.motors.RAP, 'value', rleg, 'RAP');
  window.dummy = {};
  anim("Head", head);
  anim("Left Arm", larm);
  anim("Right Arm", rarm);
  anim("Left Leg", lleg);
  anim("Right Leg", rleg);
  anim("Dummy", dummy);
  Timeline.getGlobalInstance().loop(-1);
  Timeline.getGlobalInstance().start();
  populateTracks();
  return Timeline.getGlobalInstance().stop();
}, progress = function(step, total, node) {
  return $('#load').html("Loading " + step + "/" + total);
});
